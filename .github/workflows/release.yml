name: Build Release

on: 
  workflow_dispatch:
  push:
    branches: main
    paths:
      - Packages/nadena.dev.av3-build-framework/**
      - .github/workflows/release.yml
    tags:
      - '*'


env:
  packageName: "nadena.dev.av3-build-framework"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Reset version
        id: reset-version
        run: |
          git fetch --tags
          git log
          git log 0.0.1
          VERSION_TAG=$(git describe --tags --exclude='*-*.*.*'| sed 's/-\([0-9]\+\)-/-alpha.\1./')
          jq ".version = \"$VERSION_TAG\"" Packages/${{env.packageName}}/package.json > tmp.$$.json
          mv tmp.$$.json Packages/${{env.packageName}}/package.json
          cat Packages/${{env.packageName}}/package.json
    
      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with: 
            path: "Packages/${{env.packageName}}/package.json"
            prop_path: "version"
    
      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ env.packageName }}-${{ steps.version.outputs.prop }}".zip >> $GITHUB_ENV
          echo "unityPackage=${{ env.packageName }}-${{ steps.version.outputs.prop }}.unitypackage" >> $GITHUB_ENV
        
      - name: Create Zip
        uses: thedoctor0/zip-release@09336613be18a8208dfa66bd57efafd9e2685657
        with:
          type: "zip"
          directory: "Packages/${{env.packageName}}/"
          filename: "../../${{env.zipFile}}" # make the zip file two directories up, since we start two directories in above
          
      - run: find "Packages/${{env.packageName}}/" -name \*.meta >> metaList
          
      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@cfcd3cf0391a5ef1306342794866a9897c32af0b
        with:
          package-path: ${{ env.unityPackage }}
          include-files: metaList
        
        
      - name: Make Release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          tag_name: ${{ steps.version.outputs.prop }}
          prerelease: true
          files: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}
            Packages/${{ env.packageName }}/package.json
